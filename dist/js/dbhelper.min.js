class DBHelper{static get DATABASE_URL(){return"http://localhost:1337/restaurants"}static fetchRestaurants(e){const t=`${DBHelper.DATABASE_URL}`;fetch(t).then(t=>{200===t.status?t.json().then(t=>{e(null,t)}).catch(t=>{e(t,null)}):e(`Request failed. ${t.status}`,null)}).catch(t=>e(t,null))}static fetchReview(e){fetch("http://localhost:1337/reviews").then(t=>{200===t.status?t.json().then(t=>{e(null,t)}).catch(t=>{e(t,null)}):e(`Request failed. Returned status of ${t.status}`,null)}).catch(t=>e(t,null))}static fetchRestaurantById(e,t){DBHelper.fetchRestaurants((n,r)=>{if(n)t(n,null);else{const n=r.find(t=>t.id==e);n?t(null,n):t("Restaurant does not exist",null)}})}static fetchReviewById(e,t){fetch("http://localhost:1337/reviews/?restaurant_id="+e).then(e=>{200===e.status?e.json().then(e=>{t(null,e)}).catch(e=>{t(e,null)}):t(`Request failed. Returned status of ${e.status}`,null)}).catch(e=>t(e,null))}static postReviews(e){return fetch("http://localhost:1337/reviews/",{method:"post",body:e}).then(function(e){return e.ok?e.json():[{}]})}static fetchRestaurantByCuisine(e,t){DBHelper.fetchRestaurants((n,r)=>{if(n)t(n,null);else{const n=r.filter(t=>t.cuisine_type==e);t(null,n)}})}static fetchRestaurantByNeighborhood(e,t){DBHelper.fetchRestaurants((n,r)=>{if(n)t(n,null);else{const n=r.filter(t=>t.neighborhood==e);t(null,n)}})}static fetchRestaurantByCuisineAndNeighborhood(e,t,n){DBHelper.fetchRestaurants((r,a)=>{if(r)n(r,null);else{let r=a;"all"!=e&&(r=r.filter(t=>t.cuisine_type==e)),"all"!=t&&(r=r.filter(e=>e.neighborhood==t)),n(null,r)}})}static fetchNeighborhoods(e){DBHelper.fetchRestaurants((t,n)=>{if(t)e(t,null);else{const t=n.map((e,t)=>n[t].neighborhood),r=t.filter((e,n)=>t.indexOf(e)==n);e(null,r)}})}static fetchCuisines(e){DBHelper.fetchRestaurants((t,n)=>{if(t)e(t,null);else{const t=n.map((e,t)=>n[t].cuisine_type),r=t.filter((e,n)=>t.indexOf(e)==n);e(null,r)}})}static urlForRestaurant(e){return`./restaurant.html?id=${e.id}`}static imageUrlForRestaurant(e){return`/img/${e.photograph}`}static mapMarkerForRestaurant(e,t){return new google.maps.Marker({position:e.latlng,title:e.name,url:DBHelper.urlForRestaurant(e),map:t,animation:google.maps.Animation.DROP})}static restaurantFavouriteHandler(e,t,n){var r={method:"PUT",headers:new Headers,mode:"cors",cache:"default"};fetch("http://localhost:1337/restaurants/"+e+"/?is_favorite="+t,r).then(e=>{200===e.status?n(null,1):n(`Request failed. Returned status of ${e.status}`,null)}).catch(e=>n(e,null))}}function createIDB(){if(!("indexedDB"in window))return void console.log("This browser does not support IndexedDB");const e=idb.open("restaurant-reviews",1,function(e){e.objectStoreNames.contains("restaurants")||e.createObjectStore("restaurants",{keyPath:"id"})});let t;DBHelper.fetchRestaurants((e,n)=>{e?console.error("ðŸ’© we got an error",e):t=n}),e.then(function(e){var n=e.transaction("restaurants","readwrite"),r=n.objectStore("restaurants");return t.forEach(e=>{r.put(e)}),n.complete}).then(function(){console.log("Store Updated")})}"serviceWorker"in navigator&&navigator.serviceWorker.register("sw.min.js").then(function(e){if("sync"in e&&"/restaurant.html"===window.location.pathname){var t=document.querySelector("#review-form"),n=t.querySelector("#name"),r=t.querySelector("#rating"),a=t.querySelector("#comment"),s=getParameterByName("id");t.addEventListener("submit",e=>{e.preventDefault();var t={restaurant_id:s,name:n.value,rating:r.options[r.selectedIndex].value,comments:a.value};idb.open("review",1,function(e){e.createObjectStore("outbox",{autoIncrement:!0,keyPath:"id"})}).then(function(e){return e.transaction("outbox","readwrite").objectStore("outbox").put(t)}).then(function(){return n.value="",a.value="",r.selectedIndex=0,reg.sync.register("outbox").then(()=>{console.log("Sync registered")})})})}createIDB()}).catch(function(e){console.log("ServiceWorker failed to Register",e),form.submit()});